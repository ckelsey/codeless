@import "vars";
@import "animations";

$labelPadding: 0.125em 0.5em 0 1em;
$labelIconPadding: 0.125em 0.5em 0 2.5em;
$labelUpIconPadding: 0.125em 0.5em 0 3em;
$inputPadding: 1.3em 0.7em 0.3em;
$inputLabelTopPadding: 0.8em 0.7em;
$inputIconPadding: 1.3em 0.7em 0.3em 2.3em;
$inputLabelTopIconPadding: 0.8em 0.7em 0.8em 2.3em;
$inputWidth: 30em;
$inputHeight: 2.725em;

@mixin inputMargins {
    margin-top: $space2;
    margin-bottom: $space2;
}

@mixin requiredText {
    content: "*";
    color: theme-color("danger");
    line-height: 100%;
    position: relative;
    top: 0.25em;
    margin-right: 0.25em;
    font-style: italic;
    text-transform: none;
}

@mixin errorIcon {
    :host {
        .error-icon {
            width: 0em;
            color: theme-color("danger");
            transition: width 0.2s;
        }
    }

    :host([error-message]:not([error-message=""])) {
        .error-icon {
            width: 1.5em;
        }
    }
}

@mixin fieldBase {
    :host {
        display: inline-block;
        max-width: 100%;
        box-sizing: border-box;
        vertical-align: text-bottom;
        line-height: 150%;
        font-size: inherit;
        color: inherit;

        * {
            box-sizing: border-box;
        }
    }

    :host([focused="true"]) {
        .field-element-container-inner {
            background-color: theme-color("foreground", "light");
        }
    }

    :host([disabled="true"]) {
        .field-element-container-inner {
            opacity: 0.62;
        }
    }

    :host([error-message]:not([error-message=""])) {
        .field-element-container-inner {
            box-shadow: 0 0 0 1px theme-color("danger");
        }
    }
}

@mixin fieldContainer {
    :host {
        .field-element-container {
            position: relative;
            width: auto;
            max-width: 100%;
            display: flex;
            align-items: flex-start;
            justify-content: flex-start;
            flex-direction: column;
            @include inputMargins;
        }
    }
}

@mixin fieldContainer {
    .field-element-container-inner {
        position: relative;
        width: auto;
        max-width: 100%;
        min-height: $inputHeight;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        flex-wrap: wrap;
        background-color: theme-color("foreground");
        border-radius: $borderRadius;
        transition: background-color 0.2s;
    }
}

@mixin disabled {
    cursor: not-allowed;
    opacity: 0.38;
}

@mixin placeholder {
    color: transparent;
    opacity: 0;
}

@mixin autofillStart {
    animation-name: onAutoFillStart;
    transition: background-color 50000s ease-in-out 0s;
}

@mixin autofillEnd {
    animation-name: onAutoFillCancel;
}

@mixin field {
    ::slotted([slot="input"]) {
        padding: $inputPadding;
        position: relative;
        margin: 0;
        height: auto;
        width: 100%;
        border-radius: $borderRadius;
        background-color: transparent;
        color: theme-color("background");
        border: none !important;
        box-sizing: border-box;
        height: 100%;
        flex-grow: 1;
        font-size: inherit;
        font-family: inherit;
        line-height: initial;
        outline: none !important;
        appearance: none;
        transition: color 0.2s, background-color 0.2s, background-position 0.2s, transform 0.2s;

        &::-webkit-input-placeholder {
            @include placeholder;
        }

        &:-webkit-input-placeholder {
            @include placeholder;
        }

        &:-ms-input-placeholder {
            @include placeholder;
        }

        &::placeholder {
            @include placeholder;
        }
    }

    ::slotted([slot="input"]:focus) {
        background-color: transparent;
    }

    ::slotted([slot="input"]:-internal-autofill-selected) {
        background-color: transparent !important;
    }

    ::slotted([slot="input"]:-webkit-autofill),
    ::slotted([slot="input"]:-webkit-autofill:hover),
    ::slotted([slot="input"]:-webkit-autofill:focus),
    ::slotted([slot="input"]:-webkit-autofill:active) {
        @include autofillStart;
    }

    ::slotted([slot="input"]:not(:-webkit-autofill)) {
        @include autofillEnd;
    }
}

@mixin checkedBox {
    background-color: theme-color("accent");
    box-shadow: inset 0 0px 2px 0px transparentize(theme-color("accent"), 0.5);
}

@mixin bottomText {
    :host {
        .field-input-bottom-container {
            display: block;
            padding: 0em 0.125em;
            flex-grow: 1;
            width: 100%;
            color: inherit;
            font-size: 70%;
            line-height: 150%;

            .field-input-bottom {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                flex-grow: 1;
                width: 100%;
                font-weight: 100;
                opacity: 0.62;
                color: inherit;
            }
        }
    }
}

@mixin errorText {
    :host {
        .field-error-text {
            display: block;
            color: theme-color("danger");
        }
    }
}

@mixin fieldLabel {
    :host {
        .field-label {
            width: 100%;
            min-height: 1.05em;
            text-align: left;
            display: flex;
            align-items: center;
            transform: translateX(-0.2em) translateY(0.75em) translateZ(0px) scale(1);
            transform-origin: 0 0;
            text-transform: capitalize;
            font-size: inherit;
            pointer-events: none;
            position: relative;
            line-height: 150%;
            padding: 0 0 0 0.75em;
            margin-bottom: -1.5em;
            color: transparentize(theme-color("background"), 0.38);
            transition: transform 0.2s, opacity 0.2s ease-in 0.062s;
        }
    }

    :host([focused="true"]),
    :host([empty="false"]) {
        .field-label {
            transform: translateX(0.2em) translateY(0.25em) translateZ(0) scale(0.7);
        }
    }

    :host([required="true"]) {
        .field-label ::before {
            @include requiredText;
        }
    }
}

@mixin inputLabelContainer {
    :host {
        .field-input-label {
            flex: 1 0 50%;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: flex-start;
            min-height: $inputHeight;
        }

        .field-input {
            width: 100%;
        }
    }
}

@mixin iconSlot {
    :host {
        .icon-container {
            position: relative;
            top: 0;
            left: 0;
            margin: 0;
            width: auto;
            height: 1.5em;
            max-width: 2.5em;
            display: inline-flex;
            line-height: 100%;
            font-size: inherit;
            pointer-events: none;
            color: transparentize(theme-color("background"), 0.25);

            slot[name="icon"] {
                display: flex;
                height: 1.5em;
                width: auto;
                max-width: 2em;
                align-items: center;
                justify-content: flex-start;
                font-size: initial;
            }

            &.icon-padding {
                padding-left: 0.25em;
                margin-right: -0.25em;
            }
        }
    }

    ::slotted([slot="icon"]) {
        height: 1.5em;
        width: 1.5em;
        min-width: 1.5em;
        min-height: 1.5em;
        margin: 0 0 0 0.62em;
    }
}
